# GitHub Actions CI/CD Workflow
name: Build and Deploy

on:
  push:
    branches: [ main, Authentication_service ]
    paths:
      - 'TafsilkPlatform.Web/**'
  - '.github/workflows/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  AZURE_WEBAPP_NAME: tafsilk-platform
  AZURE_WEBAPP_PACKAGE_PATH: './publish'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
  with:
    dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
    run: dotnet restore TafsilkPlatform.Web/TafsilkPlatform.Web.csproj
    
    - name: Build
      run: dotnet build TafsilkPlatform.Web/TafsilkPlatform.Web.csproj --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
    
    - name: Publish
      run: dotnet publish TafsilkPlatform.Web/TafsilkPlatform.Web.csproj --configuration Release --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
   name: 'Production'
url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
   with:
   app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  docker-build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
  uses: docker/build-push-action@v5
      with:
 context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/tafsilkplatform:latest
${{ secrets.DOCKER_USERNAME }}/tafsilkplatform:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/tafsilkplatform:buildcache
    cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/tafsilkplatform:buildcache,mode=max
