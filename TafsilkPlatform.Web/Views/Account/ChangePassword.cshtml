@model TafsilkPlatform.Web.ViewModels.ChangePasswordViewModel

@{
    ViewData["Title"] = "تغيير كلمة المرور";
}

@section Styles {
    <style>
        .change-password-page {
  background-color: var(--background-gray);
    min-height: calc(100vh - 200px);
    padding: var(--spacing-3xl) 0;
        }

     .password-container {
 max-width: 1000px;
      margin: 0 auto;
   }

        .page-header {
    margin-bottom: var(--spacing-2xl);
     }

     .page-title {
 font-size: var(--font-size-3xl);
   font-weight: 700;
     color: var(--text-primary);
   margin-bottom: var(--spacing-sm);
        }

   .page-subtitle {
   color: var(--text-secondary);
      font-size: var(--font-size-base);
      }

        .card {
background: var(--background-white);
   border: 1px solid var(--border-color);
            border-radius: var(--radius-lg);
 padding: var(--spacing-xl);
     margin-bottom: var(--spacing-xl);
    box-shadow: var(--shadow-sm);
        }

 .card-header-custom {
       display: flex;
     align-items: center;
   gap: var(--spacing-sm);
margin-bottom: var(--spacing-lg);
      padding-bottom: var(--spacing-md);
 border-bottom: 2px solid var(--border-color);
        }

    .card-header-custom i {
      color: var(--primary-color);
      font-size: 1.5rem;
        }

      .card-title {
      font-size: var(--font-size-xl);
            font-weight: 700;
    color: var(--text-primary);
  margin: 0;
      }

        .form-group {
  margin-bottom: 1.25rem;
   position: relative;
     }

        .form-label {
        display: block;
     margin-bottom: 0.5rem;
       font-weight: 600;
     color: var(--text-primary);
       font-size: 0.95rem;
        }

        .form-control {
            width: 100%;
       padding: 0.875rem 1rem;
   border: 1px solid var(--border-color);
border-radius: var(--radius-md);
   font-size: 1rem;
transition: all 0.2s;
            font-family: var(--font-family);
        }

   .form-control:focus {
 outline: none;
       border-color: var(--primary-color);
box-shadow: 0 0 0 3px rgba(44, 90, 160, 0.1);
        }

        .password-input-group {
            position: relative;
     }

 .password-toggle-btn {
       position: absolute;
  left: 12px;
    top: 50%;
   transform: translateY(-50%);
     background: none;
            border: none;
 color: var(--text-secondary);
  cursor: pointer;
 padding: 4px;
        transition: color 0.2s;
        }

   .password-toggle-btn:hover {
         color: var(--primary-color);
        }

        .form-text {
       font-size: 0.85rem;
            color: var(--text-secondary);
    margin-top: 0.25rem;
   display: block;
        }

        .text-danger {
       color: var(--error-color);
font-size: 0.85rem;
       margin-top: 0.25rem;
  display: block;
    }

        .password-requirements {
     background: var(--background-light);
padding: var(--spacing-md);
border-radius: var(--radius-md);
    margin-bottom: var(--spacing-md);
}

    .requirement-item {
 display: flex;
       align-items: center;
        gap: var(--spacing-sm);
     padding: 0.25rem 0;
       font-size: 0.9rem;
        color: var(--text-secondary);
 }

   .requirement-item i {
  font-size: 0.8rem;
   }

        .requirement-item.met {
 color: var(--success-color);
        }

 .requirement-item.met i {
color: var(--success-color);
        }

   .btn-group {
   display: flex;
        gap: var(--spacing-md);
     margin-top: var(--spacing-lg);
        }

     .btn-primary {
  background-color: var(--primary-color);
       color: white;
       padding: 0.75rem 1.5rem;
    border: none;
  border-radius: var(--radius-md);
    font-weight: 600;
 cursor: pointer;
            transition: all 0.2s;
    }

        .btn-primary:hover {
     background-color: var(--primary-hover);
            transform: translateY(-2px);
      box-shadow: var(--shadow-md);
      }

        .btn-secondary {
       background-color: var(--background-gray);
      color: var(--text-primary);
     padding: 0.75rem 1.5rem;
       border: 1px solid var(--border-color);
       border-radius: var(--radius-md);
            font-weight: 600;
 cursor: pointer;
 transition: all 0.2s;
    text-decoration: none;
     display: inline-block;
        }

      .btn-secondary:hover {
       background-color: var(--border-color);
  transform: translateY(-2px);
        }

        .alert {
  padding: 1rem 1.25rem;
margin-bottom: var(--spacing-lg);
  border-radius: var(--radius-md);
     position: relative;
        }

     .alert-success {
    background-color: #d4edda;
   border: 1px solid #c3e6cb;
     color: #155724;
        }

   .btn-close {
    position: absolute;
  top: 50%;
         left: 1rem;
       transform: translateY(-50%);
       background: transparent;
  border: none;
            font-size: 1.2rem;
 cursor: pointer;
       padding: 0;
       width: 20px;
   height: 20px;
       opacity: 0.5;
        }

  .btn-close:hover {
      opacity: 1;
        }

        .tips-card {
     background: linear-gradient(135deg, var(--primary-light), var(--background-white));
     border: 1px solid var(--primary-color);
        }

.tips-list {
     list-style: none;
          padding: 0;
   margin: 0;
        }

 .tips-list li {
 padding: var(--spacing-sm) 0;
            color: var(--text-primary);
display: flex;
  align-items: start;
  gap: var(--spacing-sm);
            line-height: 1.5;
        }

        .tips-list li i {
 color: var(--success-color);
        font-size: 1rem;
     margin-top: 0.25rem;
      }

        .security-notice {
          background: var(--background-light);
 padding: var(--spacing-md);
            border-radius: var(--radius-md);
   border-right: 4px solid var(--warning-color);
  margin-bottom: var(--spacing-lg);
   display: flex;
       align-items: start;
     gap: var(--spacing-md);
 }

 .security-notice i {
    color: var(--warning-color);
            font-size: 1.5rem;
  }

        @@media (max-width: 768px) {
   .change-password-page {
    padding: var(--spacing-xl) var(--spacing-md);
        }

            .card {
         padding: var(--spacing-lg);
     }

     .btn-group {
       flex-direction: column;
       }

       .btn-primary,
    .btn-secondary {
      width: 100%;
       }
        }
    </style>
}

<div class="change-password-page">
<div class="container password-container">
        <div class="page-header">
     <h1 class="page-title">تغيير كلمة المرور</h1>
       <p class="page-subtitle">قم بتحديث كلمة المرور الخاصة بك للحفاظ على أمان حسابك</p>
        </div>

      @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
  @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="إغلاق">×</button>
            </div>
        }

     <div class="row">
        <div class="col-lg-8">
                <!-- Change Password Form Card -->
      <div class="card">
        <div class="card-header-custom">
 <i class="fas fa-key"></i>
  <h2 class="card-title">تحديث كلمة المرور</h2>
             </div>

      <div class="security-notice">
        <i class="fas fa-info-circle"></i>
  <div>
         <strong>معلومة أمنية:</strong>
    <p style="margin: 0.25rem 0 0 0;">يجب أن تحتوي كلمة المرور على 6 أحرف على الأقل. نوصي باستخدام 8 أحرف أو أكثر مع مزيج من الأحرف والأرقام والرموز.</p>
         </div>
        </div>

                <form asp-action="ChangePassword" method="post" id="changePasswordForm">
        @Html.AntiForgeryToken()
       <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

         <div class="form-group">
       <label asp-for="CurrentPassword" class="form-label">كلمة المرور الحالية</label>
        <div class="password-input-group">
     <input asp-for="CurrentPassword" class="form-control" type="password" placeholder="أدخل كلمة المرور الحالية" autocomplete="current-password" id="currentPassword" />
 <button type="button" class="password-toggle-btn" data-target="currentPassword">
      <i class="fas fa-eye"></i>
           </button>
  </div>
    <span asp-validation-for="CurrentPassword" class="text-danger"></span>
     </div>

    <div class="form-group">
  <label asp-for="NewPassword" class="form-label">كلمة المرور الجديدة</label>
  <div class="password-input-group">
          <input asp-for="NewPassword" class="form-control" type="password" placeholder="أدخل كلمة المرور الجديدة" autocomplete="new-password" id="newPassword" />
       <button type="button" class="password-toggle-btn" data-target="newPassword">
        <i class="fas fa-eye"></i>
         </button>
 </div>
        <span asp-validation-for="NewPassword" class="text-danger"></span>
           <small class="form-text">يجب أن تحتوي كلمة المرور على 6 أحرف على الأقل</small>
      
    <!-- Password Requirements Indicator -->
           <div class="password-requirements" id="passwordRequirements" style="display: none; margin-top: 0.5rem;">
        <div class="requirement-item" id="req-length">
         <i class="fas fa-circle"></i>
 <span>8 أحرف على الأقل</span>
   </div>
 <div class="requirement-item" id="req-uppercase">
       <i class="fas fa-circle"></i>
      <span>حرف كبير واحد على الأقل</span>
       </div>
            <div class="requirement-item" id="req-number">
 <i class="fas fa-circle"></i>
  <span>رقم واحد على الأقل</span>
    </div>
          <div class="requirement-item" id="req-special">
   <i class="fas fa-circle"></i>
          <span>رمز خاص واحد على الأقل</span>
            </div>
       </div>
             </div>

    <div class="form-group">
       <label asp-for="ConfirmPassword" class="form-label">تأكيد كلمة المرور</label>
          <div class="password-input-group">
          <input asp-for="ConfirmPassword" class="form-control" type="password" placeholder="أعد إدخال كلمة المرور الجديدة" autocomplete="new-password" id="confirmPassword" />
         <button type="button" class="password-toggle-btn" data-target="confirmPassword">
      <i class="fas fa-eye"></i>
           </button>
          </div>
              <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                 </div>

            <div class="btn-group">
           <button type="submit" class="btn-primary">
     <i class="fas fa-save me-2"></i>
  تغيير كلمة المرور
     </button>
      <a asp-action="Settings" class="btn-secondary">
        <i class="fas fa-times me-2"></i>
     إلغاء
  </a>
               </div>
     </form>
    </div>
    </div>

   <div class="col-lg-4">
       <!-- Tips Card -->
          <div class="card tips-card">
     <div class="card-header-custom">
             <i class="fas fa-shield-alt"></i>
        <h2 class="card-title">نصائح لكلمة مرور قوية</h2>
         </div>

       <ul class="tips-list">
  <li>
      <i class="fas fa-check-circle"></i>
    <span>استخدم 8 أحرف على الأقل</span>
         </li>
     <li>
    <i class="fas fa-check-circle"></i>
     <span>استخدم مزيجًا من الأحرف الكبيرة والصغيرة</span>
  </li>
            <li>
  <i class="fas fa-check-circle"></i>
          <span>أضف أرقامًا ورموزًا خاصة</span>
     </li>
  <li>
    <i class="fas fa-check-circle"></i>
    <span>تجنب استخدام معلومات شخصية واضحة</span>
      </li>
       <li>
       <i class="fas fa-check-circle"></i>
          <span>لا تستخدم نفس كلمة المرور في مواقع متعددة</span>
                </li>
   <li>
       <i class="fas fa-check-circle"></i>
       <span>قم بتغيير كلمة المرور بشكل دوري</span>
</li>
  </ul>
      </div>
     </div>
  </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
    document.addEventListener("DOMContentLoaded", function () {
   // Password visibility toggles
 document.querySelectorAll('.password-toggle-btn').forEach(btn => {
   btn.addEventListener('click', function () {
       const targetId = this.getAttribute('data-target');
const input = document.getElementById(targetId);
     const icon = this.querySelector('i');

   if (input.type === 'password') {
  input.type = 'text';
    icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
    } else {
      input.type = 'password';
  icon.classList.remove('fa-eye-slash');
         icon.classList.add('fa-eye');
      }
    });
            });

            // Password requirements checker
            const newPasswordInput = document.getElementById('newPassword');
const requirementsDiv = document.getElementById('passwordRequirements');

          if (newPasswordInput && requirementsDiv) {
       newPasswordInput.addEventListener('input', function () {
        const password = this.value;
         
        if (password.length > 0) {
    requirementsDiv.style.display = 'block';
           } else {
 requirementsDiv.style.display = 'none';
          }

        // Check length
         const lengthReq = document.getElementById('req-length');
       if (password.length >= 8) {
       lengthReq.classList.add('met');
    lengthReq.querySelector('i').classList.remove('fa-circle');
              lengthReq.querySelector('i').classList.add('fa-check-circle');
      } else {
      lengthReq.classList.remove('met');
   lengthReq.querySelector('i').classList.remove('fa-check-circle');
     lengthReq.querySelector('i').classList.add('fa-circle');
   }

        // Check uppercase
      const uppercaseReq = document.getElementById('req-uppercase');
          if (/[A-Z]/.test(password)) {
   uppercaseReq.classList.add('met');
   uppercaseReq.querySelector('i').classList.remove('fa-circle');
          uppercaseReq.querySelector('i').classList.add('fa-check-circle');
        } else {
 uppercaseReq.classList.remove('met');
     uppercaseReq.querySelector('i').classList.remove('fa-check-circle');
     uppercaseReq.querySelector('i').classList.add('fa-circle');
    }

      // Check number
   const numberReq = document.getElementById('req-number');
  if (/[0-9]/.test(password)) {
       numberReq.classList.add('met');
    numberReq.querySelector('i').classList.remove('fa-circle');
                  numberReq.querySelector('i').classList.add('fa-check-circle');
   } else {
 numberReq.classList.remove('met');
numberReq.querySelector('i').classList.remove('fa-check-circle');
      numberReq.querySelector('i').classList.add('fa-circle');
         }

      // Check special character
 const specialReq = document.getElementById('req-special');
       if (/[^A-Za-z0-9]/.test(password)) {
         specialReq.classList.add('met');
   specialReq.querySelector('i').classList.remove('fa-circle');
   specialReq.querySelector('i').classList.add('fa-check-circle');
   } else {
       specialReq.classList.remove('met');
     specialReq.querySelector('i').classList.remove('fa-check-circle');
  specialReq.querySelector('i').classList.add('fa-circle');
     }
    });
     }
      });
    </script>
}