// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TafsilkPlatform.Web.Data;

#nullable disable

namespace TafsilkPlatform.Web.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251031210106_FixCascadeAndShadowFks")]
    partial class FixCascadeAndShadowFks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedEntity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.BannedUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BannedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BannedUsers");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RFQId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("RFQId");

                    b.HasIndex("TailorId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.CorporateAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Bio")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Industry")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ProfilePictureContentType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("ProfilePictureData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Corporat__3214EC07AC002547");

                    b.HasIndex(new[] { "UserId" }, "IX_CorporateAccounts_UserId");

                    b.HasIndex(new[] { "UserId" }, "UQ__Corporat__1788CC4D39440DF8")
                        .IsUnique();

                    b.ToTable("CorporateAccounts");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.CustomerProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Bio")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProfilePictureContentType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("ProfilePictureData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC07880E7F94");

                    b.HasIndex(new[] { "UserId" }, "IX_CustomerProfiles_UserId");

                    b.HasIndex(new[] { "UserId" }, "UQ__Customer__1788CC4D90808B91")
                        .IsUnique();

                    b.ToTable("CustomerProfiles");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.DeviceToken", b =>
                {
                    b.Property<Guid>("DeviceTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Devicetoken")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("RegisteredAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DeviceTokenId")
                        .HasName("PK_DeviceTokens");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_DeviceTokens_UserId");

                    b.ToTable("DeviceTokens", (string)null);
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Dispute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OpenedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolutionDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ResolvedByAdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OpenedByUserId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ResolvedByAdminId");

                    b.ToTable("Disputes");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.ErrorLog", b =>
                {
                    b.Property<Guid>("ErrorLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ErrorLogId");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Notification", b =>
                {
                    b.Property<Guid>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationId")
                        .HasName("PK_Notifications");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Notifications_UserId");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TailorId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.OrderImages", b =>
                {
                    b.Property<Guid>("OrderImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UploadedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UploadedId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderImageId");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("IX_OrderImages_OrderId");

                    b.HasIndex("OrderId1");

                    b.ToTable("OrderImages");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("PaidAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TailorId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.PortfolioImage", b =>
                {
                    b.Property<Guid>("PortfolioImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsBeforeAfter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.HasKey("PortfolioImageId")
                        .HasName("PK_PortfolioImages");

                    b.HasIndex("TailorId")
                        .HasDatabaseName("IX_PortfolioImages_TailorId");

                    b.ToTable("PortfolioImages", (string)null);
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Quote", b =>
                {
                    b.Property<Guid>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EstimatedDays")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ProposedPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("QuoteId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TailorId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RFQ", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CorporateAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CorporateAccountId");

                    b.ToTable("RFQs");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RFQBid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BidAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedDelivery")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RFQId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RFQId");

                    b.HasIndex("TailorId");

                    b.ToTable("RFQBids");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RatingDimension", b =>
                {
                    b.Property<Guid>("RatingDimensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DimensionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("RatingDimensionId");

                    b.HasIndex("ReviewId");

                    b.ToTable("RatingDimensions");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__RefreshT__3214EC07E9DA722D");

                    b.HasIndex(new[] { "ExpiresAt" }, "IX_RefreshTokens_ExpiresAt");

                    b.HasIndex(new[] { "UserId" }, "IX_RefreshTokens_UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RefundRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RequestedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("RequestedBy");

                    b.ToTable("RefundRequests");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RevenueReport", b =>
                {
                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Month")
                        .HasColumnType("date");

                    b.Property<int>("CompletedOrders")
                        .HasColumnType("int");

                    b.Property<DateTime>("GeneratedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("TailorId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalRevenue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TailorId", "Month")
                        .HasName("PK_RevenueReports");

                    b.HasIndex("TailorId1");

                    b.ToTable("RevenueReports");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Review", b =>
                {
                    b.Property<Guid>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TailorId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewId")
                        .HasName("PK_Reviews");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("IX_Reviews_CustomerId");

                    b.HasIndex("CustomerId1");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasDatabaseName("IX_Reviews_OrderId");

                    b.HasIndex("OrderId1");

                    b.HasIndex("TailorId")
                        .HasDatabaseName("IX_Reviews_TailorId");

                    b.HasIndex("TailorId1");

                    b.ToTable("Reviews", (string)null);
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC07CB85E41E");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.SystemMessage", b =>
                {
                    b.Property<Guid>("SystemMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AudienceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SystemMessageId");

                    b.ToTable("SystemMessages");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.TailorBadge", b =>
                {
                    b.Property<Guid>("TailorBadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BadgeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EarnedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TailorBadgeId");

                    b.ToTable("TailorBadges");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.TailorPerformanceView", b =>
                {
                    b.Property<decimal>("AverageRating")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3, 2)");

                    b.Property<decimal>("Revenue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("int");

                    b.HasIndex("TailorId");

                    b.ToTable((string)null);

                    b.ToView("TailorPerformanceView", (string)null);
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.TailorProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Bio")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(10, 8)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(11, 8)");

                    b.Property<string>("PricingRange")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProfilePictureContentType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("ProfilePictureData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__TailorPr__3214EC07A3FCF42C");

                    b.HasIndex(new[] { "UserId" }, "IX_TailorProfiles_UserId");

                    b.HasIndex(new[] { "UserId" }, "UQ__TailorPr__1788CC4D37A4BF4A")
                        .IsUnique();

                    b.ToTable("TailorProfiles");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.TailorService", b =>
                {
                    b.Property<Guid>("TailorServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TailorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TailorServiceId")
                        .HasName("PK_TailorServices");

                    b.HasIndex("TailorId")
                        .HasDatabaseName("IX_TailorServices_TailorId");

                    b.ToTable("TailorServices", (string)null);
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EmailNotifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("PromotionalNotifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SmsNotifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07AA820590");

                    b.HasIndex(new[] { "Email" }, "IX_Users_Email");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534975288F0")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.UserActivityLog", b =>
                {
                    b.Property<Guid>("UserActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserActivityLogId")
                        .HasName("PK_UserActivityLogs");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_UserActivityLogs_UserId");

                    b.ToTable("UserActivityLogs", (string)null);
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.UserAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(10, 8)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(11, 8)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__UserAddr__3214EC07DDE0E48B");

                    b.HasIndex(new[] { "UserId" }, "IX_UserAddresses_UserId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Wallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WalletId"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WalletId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Admin", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.AuditLog", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.BannedUser", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Contract", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.RFQ", "RFQ")
                        .WithMany()
                        .HasForeignKey("RFQId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany()
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RFQ");

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.CorporateAccount", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithOne("CorporateAccount")
                        .HasForeignKey("TafsilkPlatform.Web.Models.CorporateAccount", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CorporateAccounts_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.CustomerProfile", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithOne("CustomerProfile")
                        .HasForeignKey("TafsilkPlatform.Web.Models.CustomerProfile", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CustomerProfiles_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.DeviceToken", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Dispute", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "OpenedByUser")
                        .WithMany()
                        .HasForeignKey("OpenedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.User", "ResolvedByAdmin")
                        .WithMany()
                        .HasForeignKey("ResolvedByAdminId");

                    b.Navigation("OpenedByUser");

                    b.Navigation("Order");

                    b.Navigation("ResolvedByAdmin");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Notification", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Order", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.CustomerProfile", "Customer")
                        .WithMany("orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany()
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.OrderImages", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.Order", null)
                        .WithMany("orderImages")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("OrderId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.OrderItem", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.Order", "order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Payment", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.CustomerProfile", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany("Payments")
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.PortfolioImage", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany("PortfolioImages")
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Quote", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.Order", "order")
                        .WithMany("quote")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany()
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tailor");

                    b.Navigation("order");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RFQ", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.CorporateAccount", "CorporateAccount")
                        .WithMany()
                        .HasForeignKey("CorporateAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateAccount");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RFQBid", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.RFQ", "RFQ")
                        .WithMany("Bids")
                        .HasForeignKey("RFQId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany()
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RFQ");

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RatingDimension", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.Review", "Review")
                        .WithMany("RatingDimensions")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Review");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RefreshToken", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_RefreshTokens_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RefundRequest", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.User", "RequestedByUser")
                        .WithMany()
                        .HasForeignKey("RequestedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("RequestedByUser");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RevenueReport", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", null)
                        .WithMany()
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany("RevenueReports")
                        .HasForeignKey("TailorId1");

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Review", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.CustomerProfile", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.CustomerProfile", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId1");

                    b.HasOne("TafsilkPlatform.Web.Models.Order", null)
                        .WithOne()
                        .HasForeignKey("TafsilkPlatform.Web.Models.Review", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId1");

                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", null)
                        .WithMany()
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany("Reviews")
                        .HasForeignKey("TailorId1");

                    b.Navigation("Customer");

                    b.Navigation("Order");

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.TailorPerformanceView", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany()
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.TailorProfile", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithOne("TailorProfile")
                        .HasForeignKey("TafsilkPlatform.Web.Models.TailorProfile", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_TailorProfiles_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.TailorService", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.TailorProfile", "Tailor")
                        .WithMany("TailorServices")
                        .HasForeignKey("TailorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tailor");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.User", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.UserActivityLog", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.UserAddress", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_UserAddresses_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Wallet", b =>
                {
                    b.HasOne("TafsilkPlatform.Web.Models.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("TafsilkPlatform.Web.Models.Wallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.CustomerProfile", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Order", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Payments");

                    b.Navigation("orderImages");

                    b.Navigation("quote");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.RFQ", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Review", b =>
                {
                    b.Navigation("RatingDimensions");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.TailorProfile", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("PortfolioImages");

                    b.Navigation("RevenueReports");

                    b.Navigation("Reviews");

                    b.Navigation("TailorServices");
                });

            modelBuilder.Entity("TafsilkPlatform.Web.Models.User", b =>
                {
                    b.Navigation("CorporateAccount");

                    b.Navigation("CustomerProfile");

                    b.Navigation("RefreshTokens");

                    b.Navigation("TailorProfile");

                    b.Navigation("UserAddresses");

                    b.Navigation("Wallet");
                });
#pragma warning restore 612, 618
        }
    }
}
