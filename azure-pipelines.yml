# Azure DevOps Pipeline for CI/CD
trigger:
  branches:
    include:
      - main
      - Authentication_service
  paths:
    include:
      - TafsilkPlatform.Web/**

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '9.0.x'
  projectPath: 'TafsilkPlatform.Web/TafsilkPlatform.Web.csproj'

stages:
  - stage: Build
    displayName: 'Build and Test'
    jobs:
      - job: BuildJob
        displayName: 'Build Application'
     steps:
    - task: UseDotNet@2
  displayName: 'Install .NET SDK'
   inputs:
              version: $(dotnetSdkVersion)
            includePreviewVersions: false

  - task: DotNetCoreCLI@2
       displayName: 'Restore NuGet Packages'
          inputs:
    command: 'restore'
          projects: '$(projectPath)'

          - task: DotNetCoreCLI@2
            displayName: 'Build Project'
 inputs:
        command: 'build'
    projects: '$(projectPath)'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
          displayName: 'Run Tests'
            inputs:
     command: 'test'
     projects: '**/*Tests.csproj'
           arguments: '--configuration $(buildConfiguration) --no-build'

      - task: DotNetCoreCLI@2
            displayName: 'Publish Application'
        inputs:
   command: 'publish'
   publishWebProjects: false
        projects: '$(projectPath)'
           arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true

   - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
            inputs:
  pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'
       publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy to Azure'
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
  - deployment: DeployWeb
      displayName: 'Deploy to Azure App Service'
        environment: 'Production'
        strategy:
       runOnce:
            deploy:
       steps:
                - task: AzureWebApp@1
     displayName: 'Deploy to Azure Web App'
  inputs:
        azureSubscription: '$(azureSubscription)'
   appType: 'webAppLinux'
         appName: '$(webAppName)'
         package: '$(Pipeline.Workspace)/drop/**/*.zip'
                    runtimeStack: 'DOTNETCORE|9.0'

          - task: AzureAppServiceSettings@1
     displayName: 'Configure App Settings'
            inputs:
             azureSubscription: '$(azureSubscription)'
    appName: '$(webAppName)'
    resourceGroupName: '$(resourceGroupName)'
  appSettings: |
         [
      {
      "name": "ASPNETCORE_ENVIRONMENT",
                "value": "Production",
       "slotSetting": false
        }
    ]
